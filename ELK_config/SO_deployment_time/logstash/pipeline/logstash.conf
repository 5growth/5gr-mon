input {
   beats {
      port => "5044"
   }
}

filter {
  grok {
    pattern_definitions => {
          "TIME_FORMAT" => "%{MONTHNUM}/%{MONTHDAY}/%{YEAR} %{HOUR}:?%{MINUTE}(?::?%{SECOND})?"
          "NSID" => "fgt-[A-Fa-f0-9]{7}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}"
        }
    match => { "message" => "\[%{TIME_FORMAT:timestamp}\]\sINFO\s+SOEc instantiate_ns_process with nsId %{NSID:nsId}, %{GREEDYDATA:last}" }
    add_field => { "start_SO_instantiate" => "%{timestamp}" }
  }

  grok {
    pattern_definitions => {
          "TIME_FORMAT" => "%{MONTHNUM}/%{MONTHDAY}/%{YEAR} %{HOUR}:?%{MINUTE}(?::?%{SECOND})?"
          "NSID" => "fgt-[A-Fa-f0-9]{7}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}"
        }
    match => { "message" => "\[%{TIME_FORMAT:timestamp}\]\sINFO\s+\*+Time measure: SOEc instantiate_ns_process finished for nsId %{NSID:nsId}" }
    add_field => { "deployment_duration" => "" }
    add_field => { "finish_SO_instantiate" => "%{timestamp}"  }
  }

  date {
    match => [ "timestamp", "MM/dd/YYYY HH:mm:ss.SSS"]
    target => "@timestamp"
    remove_field => "timestamp"
  }

  if [start_SO_instantiate] {
    aggregate {
      task_id => "%{nsId}"
      code => "map['start_SO_instantiate'] = event.get('@timestamp')"
      map_action => "create_or_update"
    }
  }

  if [finish_SO_instantiate] {
    aggregate {
      task_id => "%{nsId}"
      code => "
                time_finish = event.get('@timestamp')
                difference = time_finish - map['start_SO_instantiate']
                hours = (difference / (60 * 60))
                minutes = ((difference / 60) % 60)
                seconds = (difference % 60)
                time_d = format('%02d:%02d:%.02d', hours, minutes, seconds)
                event.set('deployment_duration',  time_d)
              "
      map_action => "update"
      end_of_task => true
      timeout => 3600
    }
  }


}

output {
   elasticsearch {
      hosts => ["172.18.194.42:9200"]
      user => "elastic"
      password => "changeme"
      index => "test1-%{+dd.MM.YYYY}"
   }
   stdout { codec => rubydebug }
}