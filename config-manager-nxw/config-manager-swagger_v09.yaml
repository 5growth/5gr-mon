---
swagger: "2.0"
info:
  description: The API of the 5Gr Monitoring Configuration Manager.
  version: "0.9"
  title: Configuration Manager API
  contact:
    name: Marco Capitani
    url: http://www.nextworks.it
    email: m.capitani@nextworks.it
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
host: localhost:8080
basePath: /prom-manager
tags:
- name: exporter
  description: Exporters operations
- name: alert
  description: Alert operations
- name: dashboard
  description: Dashboard operations
- name: topic
  description: Topic operations
- name: agent
  description: Agent operations
- name: agent_command
  description: Commands execution on Agent
- name: agent_prometheus_collector
  description: Configuration Prometheus collectors on Agent
- name: agent_prometheus_exporter
  description: Configuration Prometheus exporters on Agent
- name: prometheus_scraper
  description: Configuration Prometheus Scraper
- name: log_pipeline_manager
  description: Log Pipeline Manager
paths:
  /exporter:
    get:
      tags:
      - exporter
      summary: Get all exporters
      operationId: getExporters
      produces:
      - application/json
      - application/x-yaml
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/ExporterQueryResult'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
      - exporter
      summary: Create new exporter
      operationId: postExporter
      consumes:
      - application/json
      - application/x-yaml
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - in: body
        name: exporter
        description: The exporter to be created
        required: true
        schema:
          $ref: '#/definitions/ExporterDescription'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Exporter'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /exporter/{exporterId}:
    get:
      tags:
      - exporter
      summary: Get exporter details
      operationId: getExporter
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - name: exporterId
        in: path
        description: The ID of the exporter
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Exporter'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    put:
      tags:
      - exporter
      summary: Update exporter
      operationId: putExporter
      consumes:
      - application/json
      - application/x-yaml
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - name: exporterId
        in: path
        description: The ID of the exporter to be updated
        required: true
        type: string
      - in: body
        name: exporter
        description: The exporter data to update
        required: true
        schema:
          $ref: '#/definitions/Exporter'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Exporter'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      tags:
      - exporter
      summary: Delete exporter
      operationId: deleteExporter
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - name: exporterId
        in: path
        description: The ID of the exporter to be deleted
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/inline_response_200'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /alert:
    get:
      tags:
      - alert
      summary: Get all alerts
      operationId: getAllAlerts
      produces:
      - application/json
      - application/x-yaml
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/AlertQueryResult'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
      - alert
      summary: Create new alert
      operationId: postAlert
      consumes:
      - application/json
      - application/x-yaml
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - in: body
        name: alert
        description: the alert to be created
        required: true
        schema:
          $ref: '#/definitions/AlertDescription'
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/Alert'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /alert/{alertId}:
    get:
      tags:
      - alert
      summary: Get alert details
      operationId: getAlert
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - name: alertId
        in: path
        description: the ID of the alert
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Alert'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    put:
      tags:
      - alert
      summary: Update alert
      operationId: putAlert
      consumes:
      - application/json
      - application/x-yaml
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - name: alertId
        in: path
        description: the ID of the alert
        required: true
        type: string
      - in: body
        name: alert
        description: the alert properties to be updated
        required: true
        schema:
          $ref: '#/definitions/Alert'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Alert'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      tags:
      - alert
      summary: Delete alert
      operationId: deleteAlert
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - name: alertId
        in: path
        description: the ID of the alert
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/inline_response_200_1'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /dashboard:
    get:
      tags:
      - dashboard
      summary: Get all dashboards
      operationId: getAllDashboards
      produces:
      - application/json
      - application/x-yaml
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/DashboardQueryResult'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
      - dashboard
      summary: Create new dashboard
      operationId: postDashboard
      consumes:
      - application/json
      - application/x-yaml
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - in: body
        name: dashboard
        description: the dashboard to be created
        required: true
        schema:
          $ref: '#/definitions/DashboardDescription'
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/Dashboard'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /dashboard/{dashboardId}:
    get:
      tags:
      - dashboard
      summary: Get dashboard details
      operationId: getDashboard
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - name: dashboardId
        in: path
        description: the ID of the dashboard
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Dashboard'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    put:
      tags:
      - dashboard
      summary: Update dashboard
      operationId: putDashboard
      consumes:
      - application/json
      - application/x-yaml
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - name: dashboardId
        in: path
        description: the ID of the dashboard
        required: true
        type: string
      - in: body
        name: dashboard
        description: the dashboard properties to be updated
        required: true
        schema:
          $ref: '#/definitions/Dashboard'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Dashboard'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      tags:
      - dashboard
      summary: Delete dashboard
      operationId: deleteDashboard
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - name: dashboardId
        in: path
        description: the ID of the dashboard
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/inline_response_200_2'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /topic:
    get:
      tags:
      - topic
      summary: Get all topics
      operationId: getAlltopics
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Topic'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
      - topic
      summary: Create new topic
      operationId: postTopic
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: topic
        description: the topic to be created
        required: true
        schema:
          $ref: '#/definitions/Topic'
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/Topic'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    delete:
      tags:
      - topic
      summary: Delete topic
      operationId: deleteTopic
      produces:
      - application/json
      parameters:
      - in: body
        name: topic
        description: the topic to be deleted
        required: true
        schema:
          $ref: '#/definitions/DashboardDescription'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Dashboard'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /agent:
    get:
      tags:
      - agent
      summary: Returns all agents
      description: Return all agents
      operationId: returnAllAgents
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/agent_get_response'
        "400":
          description: Invalid status value
    post:
      tags:
      - agent
      summary: Creates a Agent in the store
      operationId: createAgent
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: createAgent
        description: Creates a Agent in the store
        required: true
        schema:
          $ref: '#/definitions/agent_create_request'
      responses:
        "200":
          description: Creates a Agent in the store with form data
          schema:
            $ref: '#/definitions/agent_create_response'
        "405":
          description: Invalid input
  /agent/{agentId}:
    get:
      tags:
      - agent
      summary: Finds Agent by ID
      description: Returns a single Agent
      operationId: getAgentById
      parameters:
      - name: agentId
        in: path
        description: ID of Agents to return
        required: true
        type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/agent_get_response'
        "400":
          description: Invalid ID supplied
        "404":
          description: Agent not found
    delete:
      tags:
      - agent
      summary: Deletes a agent
      operationId: deleteAgent
      parameters:
      - name: agentId
        in: path
        description: Agent id to delete
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/inline_response_200_3'
        "400":
          description: Invalid ID supplied
        "404":
          description: Agent not found
  /agent_command:
    post:
      tags:
      - agent_command
      summary: Executes command
      description: Executes command on remove Virtual Machine
      operationId: executeCommand
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: executeCommand
        description: Created user object
        required: true
        schema:
          $ref: '#/definitions/command_post_request'
      responses:
        "200":
          description: Creates a Agent in the store with form data
          schema:
            $ref: '#/definitions/command_post_request'
        "404":
          description: Invalid input
  /agent_command/{agentId}/{commandId}:
    get:
      tags:
      - agent_command
      summary: Gets command result
      operationId: getCommandStatus
      parameters:
      - name: agentId
        in: path
        description: Agent ID
        required: true
        type: string
      - name: commandId
        in: path
        description: CommandId
        required: true
        type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/command_get_response'
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
  /add_prometheus_collector:
    post:
      tags:
      - agent_prometheus_collector
      summary: Adds prometheus collector
      description: Add prometheus collector
      operationId: addPrometheusCollector
      parameters:
      - in: body
        name: addPrometheusCollector
        description: Add prometheus collector
        required: true
        schema:
          $ref: '#/definitions/add_prometheus_collector'
      responses:
        "200":
          description: Added prometheus collector
          schema:
            $ref: '#/definitions/add_prometheus_collector'
        "404":
          description: Invalid input
  /del_prometheus_collector/{agentId}/{collectorId}:
    delete:
      tags:
      - agent_prometheus_collector
      summary: Deletes prometheus collector
      operationId: delPrometheusCollector
      parameters:
      - name: agentId
        in: path
        description: Agent id
        required: true
        type: string
      - name: collectorId
        in: path
        description: Collector id
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/inline_response_200_4'
        "400":
          description: Invalid ID supplied
        "404":
          description: Prometheus collecotr not found
  /install_exporter:
    post:
      tags:
      - agent_prometheus_exporter
      summary: Install prometheus Exporter
      description: Install prometheus Exporter
      operationId: installPrometheusExporter
      parameters:
      - in: body
        name: installPrometheusCollector
        description: Add prometheus collector
        required: true
        schema:
          $ref: '#/definitions/install_prometheus_exporter'
      responses:
        "200":
          description: Install prometheus Exporter
          schema:
            $ref: '#/definitions/install_prometheus_exporter_response'
        "404":
          description: Invalid input
  /uninstall_exporter/{agentId}/{prometheus_exporter_Id}:
    delete:
      tags:
      - agent_prometheus_exporter
      summary: Uninstall prometheus exporter
      operationId: uninstallPrometheusExporter
      parameters:
      - name: agentId
        in: path
        description: Agent id
        required: true
        type: string
      - name: prometheus_exporter_Id
        in: path
        description: Prometheus Exporter id
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/inline_response_200_5'
        "400":
          description: Invalid ID supplied
        "404":
          description: Prometheus Exporter not found
  /prometheus_scraper:
    post:
      tags:
      - prometheus_scraper
      summary: Create Prometheus Scrapper
      description: Create Prometheus Scraper
      operationId: createPrometheusScraper
      parameters:
      - in: body
        name: installPrometheusCollector
        description: Add prometheus collector
        required: true
        schema:
          $ref: '#/definitions/create_prometheus_scraper'
      responses:
        "200":
          description: Install prometheus Exporter
          schema:
            $ref: '#/definitions/create_prometheus_scraper_response'
        "404":
          description: Invalid input
  /prometheus_scraper/{prometheus_scraper_Id}:
    delete:
      tags:
      - prometheus_scraper
      summary: Delete Prometheus Scraper
      operationId: deletePrometheusScrapper
      parameters:
      - name: prometheus_scraper_Id
        in: path
        description: Prometheus Scraper id
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/inline_response_200_6'
        "400":
          description: Invalid ID supplied
        "404":
          description: Prometheus Scraper not found
  /kibanaDashboard:
    post:
      tags:
      - log_pipeline_manager
      summary: Create Kibana Dashboard at log pipeline manager
      description: Create Kibana Dashboard
      operationId: createKibanaDashboard
      parameters:
      - in: body
        name: createKibanaDashboard
        description: Create Kibana Dashboard at log pipeline manager
        required: true
        schema:
          $ref: '#/definitions/create_kibana_dashboard'
      responses:
        "200":
          description: Kibana Dashboard at log pipeline manager was created
          schema:
            $ref: '#/definitions/create_kibana_dashboard_response'
        "404":
          description: Invalid input
  /kibanaDashboard/{kibanaDashboardId}:
    delete:
      tags:
      - log_pipeline_manager
      summary: Delete Kibana dashboard
      operationId: deleteKibanaDashboard
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - name: kibanaDashboardId
        in: path
        description: the ID of the Kibana dashboard
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/inline_response_200_7'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /elk/alert:
    post:
      tags:
      - log_pipeline_manager
      summary: Create log alert at log pipeline manager
      description: Create log alert
      operationId: createLogAlert
      parameters:
      - in: body
        name: createLogAlert
        description: Create log alert at log pipeline manager
        required: true
        schema:
          $ref: '#/definitions/create_log_alert'
      responses:
        "200":
          description: The log alert at log pipeline manager was created
          schema:
            $ref: '#/definitions/create_log_alert_response'
        "404":
          description: Invalid input
  /elk/alert/{logAlertId}:
    delete:
      tags:
      - log_pipeline_manager
      summary: Delete Log Alert
      operationId: logAlertId
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - name: logAlertId
        in: path
        description: the ID of the log alert id
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/inline_response_200_8'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
definitions:
  Endpoint:
    type: object
    properties:
      address:
        type: string
        description: an IP address
      port:
        type: integer
        format: int32
        description: a TCP port number
  ExporterDescription:
    type: object
    properties:
      name:
        type: string
        description: |
          Human-readable description of the exporter, e.g. "NSI-XXX_web-server_VM-XXX"
      endpoint:
        type: array
        description: The list of endpoints of the instances of this job
        items:
          $ref: '#/definitions/Endpoint'
      collectionPeriod:
        type: integer
        format: int32
        description: the interval (in seconds) between scrapes
      nsId:
        type: string
        description: The Network Service ID. It will be used as a label in the exporter
      vnfdId:
        type: string
        description: The VNFD ID. It will be used as a label in the exporter
  Exporter:
    type: object
    properties:
      exporterId:
        type: string
        description: |
          the ID of the exporter. It is also the name assigned to the corresponding scrape job
      name:
        type: string
        description: |
          Human-readable description of the exporter, e.g. "NSI-XXX_web-server_VM-XXX"
      endpoint:
        type: array
        description: The list of endpoints of the instances of this job
        items:
          $ref: '#/definitions/Endpoint'
      collectionPeriod:
        type: integer
        format: int32
        description: the interval (in seconds) between scrapes
      nsId:
        type: string
        description: The Network Service ID. It will be used as a label in the exporter
      vnfdId:
        type: string
        description: The VNFD ID. It will be used as a label in the exporter
  ExporterQueryResult:
    type: object
    properties:
      exporter:
        type: array
        description: The list of exporters matching the query
        items:
          $ref: '#/definitions/Exporter'
  KVP:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  AlertDescription:
    type: object
    properties:
      alertName:
        type: string
        description: the human-readable name for the alert
      labels:
        type: array
        items:
          $ref: '#/definitions/KVP'
      severity:
        type: string
        description: the severity of the alert
        enum:
        - warning
        - error
        - critical
      for:
        type: string
        description: the time to wait before firing an alert. Pattern [0-9]+{s,m}
        pattern: \d+[sm]
      query:
        type: string
        description: |
          the query whose value should be monitored. See https://prometheus.io/docs/prometheus/latest/querying/basics/ for details
      value:
        type: number
        format: double
        description: the value associated to the threshold
      kind:
        type: string
        description: the kind of inequality the query should satisfy related to the value
        enum:
        - G
        - GEQ
        - L
        - LEQ
        - EQ
        - NEQ
      target:
        type: string
        format: URI
        description: the URL to which the notification of the violated threshold should be sent
  Alert:
    type: object
    properties:
      alertId:
        type: string
        description: the ID assigned to the alert
      alertName:
        type: string
        description: the human-readable name for the alert
      labels:
        type: array
        items:
          $ref: '#/definitions/KVP'
      severity:
        type: string
        description: the severity of the alert
        enum:
        - warning
        - error
        - critical
      for:
        type: string
        description: the time to wait before firing an alert. Pattern [0-9]+{s,m}
        pattern: \d+[sm]
      query:
        type: string
        description: |
          the query whose value should be monitored. See https://prometheus.io/docs/prometheus/latest/querying/basics/ for details
      value:
        type: number
        format: double
        description: the value associated to the threshold
      kind:
        type: string
        description: the kind of inequality the query should satisfy related to the value
        enum:
        - G
        - GEQ
        - L
        - LEQ
        - EQ
        - NEQ
      target:
        type: string
        format: URI
        description: the URL to which the notification of the violated threshold should be sent
  AlertQueryResult:
    type: object
    properties:
      alert:
        type: array
        description: the list of alerts matching the query
        items:
          $ref: '#/definitions/Alert'
  DashboardPanel:
    type: object
    properties:
      title:
        type: string
      query:
        type: string
        description: |
          the query whose value the graph in the panel should show. See https://prometheus.io/docs/prometheus/latest/querying/basics/ for details
      size:
        type: string
        description: the size of the panel
        enum:
        - fullscreen
        - fullwide
        - fulltall
        - quarterscreen
        - wide
        - tall
        - medium
        - small
  Dashboard:
    type: object
    properties:
      dashboardId:
        type: string
        description: the ID assigned to the dashboard
      url:
        type: string
        description: the URL through which the dashboard is reachable
      name:
        type: string
        description: the name of the dashboard
      panels:
        type: array
        description: the panels to be included in the dashboard
        items:
          $ref: '#/definitions/DashboardPanel'
      users:
        type: array
        description: the users which should be allowed to see this dashboard
        items:
          type: string
      plottedTime:
        type: integer
        format: int32
        description: the time interval to be shown on the graphs, in minutes
      refreshTime:
        type: string
        description: the time interval to wait before refreshing the graphs
        enum:
        - 5s
        - 10s
        - 30s
        - 1m
        - 5m
        - 15m
        - 30m
        - 1h
        - 2h
        - 1d
  DashboardDescription:
    type: object
    properties:
      name:
        type: string
        description: the name of the dashboard
      panels:
        type: array
        description: the panels to be included in the dashboard
        items:
          $ref: '#/definitions/DashboardPanel'
      users:
        type: array
        description: the users which should be allowed to see this dashboard
        items:
          type: string
      plottedTime:
        type: integer
        format: int32
        description: the time interval to be shown on the graphs, in minutes
      refreshTime:
        type: string
        description: the time interval to wait before refreshing the graphs
        enum:
        - 5s
        - 10s
        - 30s
        - 1m
        - 5m
        - 15m
        - 30m
        - 1h
        - 2h
        - 1d
  DashboardQueryResult:
    type: object
    properties:
      dashboard:
        type: array
        description: the list of dashboards matching the query
        items:
          $ref: '#/definitions/Dashboard'
  agent_create_request:
    type: object
    properties:
      intall_method:
        type: string
        example: cloud_init
        enum:
        - cloud_init
        - ssh
        - manual
      description:
        type: string
        example: VNF_1
      daemon_user:
        type: string
        example: ubuntu
  agent_create_response:
    type: object
    properties:
      agent_id:
        type: string
        example: vm_agent_1
      intall_method:
        type: string
        example: cloud_init
        enum:
        - cloud_init
        - ssh
        - manual
      description:
        type: string
        example: VNF_1
      cloud_init_script:
        type: string
        example: cloud_init_script
      daemon_user:
        type: string
        example: ubuntu
  agent_get_response:
    type: object
    properties:
      agent_id:
        type: string
        example: vm_agent_1
      intall_method:
        type: string
        example: cloud_init
        enum:
        - cloud_init
        - ssh
        - manual
      description:
        type: string
        example: VNF_1
      cloud_init_script:
        type: string
        example: cloud_init_script
      daemon_user:
        type: string
        example: ubuntu
      errors:
        type: array
        items:
          $ref: '#/definitions/error_prometheus_collector'
      keep_alive_received:
        type: string
        example: never
      status:
        type: string
        example: Created
        enum:
        - Created
        - Ok
        - Error
        - Down
  error_prometheus_collector:
    type: object
    properties:
      object_type:
        type: string
        example: Error_prometheus_collector
      prometheus_collector_id:
        type: string
        example: 192.168.1.10:8000
      url:
        type: string
        example: http://192.168.1.10:8000/metrics
      error:
        type: string
        example: 'Failed to establish a new connection: [Errno 111] Connection refused'
      prometheus_url_suffix:
        type: string
        example: /metrics/job/kafka_job/instance/192.168.1.10:5000
  command_post_request:
    type: object
    properties:
      agent_id:
        type: string
        example: vm_agent_1
      command_id:
        type: string
        example: "1"
      object_type:
        type: string
        example: command
      args:
        type: array
        items:
          type: string
          example: arg1_value
      env:
        type: string
        example: ""
      type_message:
        type: string
        example: bash_script
      cwd:
        type: string
        example: /
      body:
        type: array
        items:
          type: string
          example: '#! /bin/bash -e'
  command_get_response:
    type: object
    properties:
      agent_id:
        type: string
        example: vm_agent_1
      command_id:
        type: string
        example: "1"
      err:
        type: string
        example: ""
      out:
        type: string
        example: Tue Mar 10 13:56:10 EET 2020\narg1_value\n
      returncode:
        type: string
        example: "0"
  add_prometheus_collector:
    type: object
    properties:
      agent_id:
        type: string
        example: vm_agent_1
      host:
        type: string
        example: 127.0.0.1
      prometheus_topic:
        type: string
        example: prometheus
      port:
        type: string
        example: "9100"
      node_url_suffix:
        type: string
        example: /metrics
      prometheus_job:
        type: string
        example: vm_agent_1
      interval:
        type: string
        example: "1"
      labels:
        type: array
        items:
          $ref: '#/definitions/add_prometheus_collector_labels'
  install_prometheus_exporter:
    type: object
    properties:
      agent_id:
        type: string
        example: vm_agent_1
      exporter:
        type: string
        example: node_exporter
      object_type:
        type: string
        example: command
      args:
        type: array
        items:
          type: string
          example: arg1_value
      env:
        type: string
        example: ""
      type_message:
        type: string
        example: bash_script
      cwd:
        type: string
        example: /tmp
      host:
        type: string
        example: 127.0.0.1
      prometheus_topic:
        type: string
        example: prometheus
      port:
        type: string
        example: "9100"
      node_url_suffix:
        type: string
        example: /metrics
      prometheus_job:
        type: string
        example: vm_agent_1
      interval:
        type: string
        example: "1"
      labels:
        type: array
        items:
          $ref: '#/definitions/add_prometheus_collector_labels'
  install_prometheus_exporter_response:
    type: object
    properties:
      agent_id:
        type: string
        example: vm_agent_1
      exporter:
        type: string
        example: node_exporter
      object_type:
        type: string
        example: command
      args:
        type: array
        items:
          type: string
          example: arg1_value
      env:
        type: string
        example: ""
      type_message:
        type: string
        example: bash_script
      cwd:
        type: string
        example: /tmp
      command_id:
        type: string
        example: "1"
      body:
        type: array
        items:
          type: string
          example: '#! /bin/bash -e'
      host:
        type: string
        example: 127.0.0.1
      prometheus_topic:
        type: string
        example: prometheus
      port:
        type: string
        example: "9100"
      node_url_suffix:
        type: string
        example: /metrics
      prometheus_job:
        type: string
        example: vm_agent_1
      interval:
        type: string
        example: "1"
      labels:
        type: array
        items:
          $ref: '#/definitions/add_prometheus_collector_labels'
  create_prometheus_scraper:
    type: object
    properties:
      nsid:
        type: string
        example: fgt-9f62028-cbe4-4d07-b89d-e39d07943175
        description: |
          The Network Service ID.
      vnfid:
        type: string
        example: webserver
        description: |
          The VNF ID.
      interval:
        type: integer
        example: 15
        description: |
          the interval (in seconds) between scrapes from Prometheus
      performanceMetric:
        type: string
        example: VcpuUsageMean
        description: |
          The name of the performance metric on which the performance monitoring task is to be created.
      kafkaTopic:
        type: string
        example: fgt-9f62028-cbe4-4d07-b89d-e39d07943175_scaling
        description: |
          Kafka's Topic to which performance metric will be published
      expression:
        type: string
        example: avg((1 - avg by(instance) (irate(node_cpu_seconds_total{mode="idle",nsId="fgt-9f62028-cbe4-4d07-b89d-e39d07943175",vnfdId="spr2"}[1m]))) * 100)
        description: |
          The expression to calculate performance Metric
  create_prometheus_scraper_response:
    type: object
    properties:
      nsid:
        type: string
        example: fgt-9f62028-cbe4-4d07-b89d-e39d07943175
        description: |
          The Network Service ID.
      vnfid:
        type: string
        example: webserver
        description: |
          The VNF ID.
      interval:
        type: integer
        example: 15
        description: |
          the interval (in seconds) between scrapes from Prometheus
      performanceMetric:
        type: string
        example: VcpuUsageMean
        description: |
          The name of the performance metric on which the performance monitoring task is to be created.
      kafkaTopic:
        type: string
        example: fgt-9f62028-cbe4-4d07-b89d-e39d07943175_scaling
        description: |
          Kafka's Topic to which performance metric will be published
      expression:
        type: string
        example: avg((1 - avg by(instance) (irate(node_cpu_seconds_total{mode="idle",nsId="fgt-9f62028-cbe4-4d07-b89d-e39d07943175",vnfdId="spr2"}[1m]))) * 100)
        description: |
          The expression to calculate performance Metric
      scraperId:
        type: string
        example: e1a67729-5319-45fd-9e3b-197fa9963d6d
        description: |
          The ID of the Prometheus Scraper Object.
  create_kibana_dashboard:
    type: object
    properties:
      dashboardTitle:
        type: string
        example: NS_fgt-82f4710-3d04-429a-8243-5a2ac741fd40
        description: |
          The Kibana dashboard title.
      ns_id:
        type: string
        example: fgt-82f4710-3d04-429a-8243-5a2ac741fd40
        description: |
          The Network Service ID.
      dashboard_type:
        type: string
        example: vm_logs
        description: |
          The Kibana dashboard type.
  create_kibana_dashboard_response:
    type: object
    properties:
      dashboardTitle:
        type: string
        example: NS_fgt-82f4710-3d04-429a-8243-5a2ac741fd40
        description: |
          The Kibana dashboard title.
      ns_id:
        type: string
        example: fgt-82f4710-3d04-429a-8243-5a2ac741fd40
        description: |
          The Network Service ID.
      dashboard_type:
        type: string
        example: vm_logs
        description: |
          The Kibana dashboard type.
      dashboardId:
        type: string
        example: 89dbeb2b-584e-4749-85f2-a96c6eadfabf
        description: |
          The Kibana dashboard identifier.
      url:
        type: string
        example: http://10.9.8.150:5601/app/kibana#/dashboard/89dbeb2b-584e-4749-85f2-a96c6eadfabf?embed=true&_g=(refreshInterval:(pause:!f,value:10000),time:(from:now-1y,to:now))
        description: |
          The Kibana dashboard URL.
  create_log_alert:
    type: object
    properties:
      alertName:
        type: string
        example: ar1
        description: |
          The human-readable name for the alert
      labels:
        type: array
        items:
          $ref: '#/definitions/KVP'
      index:
        type: string
        example: fgt-82f4710-3d04-429a-8243-5a2ac741fd58
        description: |
          The Network Service ID.
      query:
        type: string
        example: '*testlogs*'
        description: |
          The query has regex format
      severity:
        type: string
        description: the severity of the alert
        enum:
        - warning
        - error
        - critical
      for:
        type: string
        example: 60s
        description: The time during which the system receives messages that match the query.  Pattern [0-9]+{s}
        pattern: \d+[s]
      target:
        type: string
        format: URI
        example: http://10.5.1.188:8085/sla_manager/notifications
        description: the URL to which the notification of the violated threshold should be sent
      kind:
        type: string
        description: the kind of inequality the query should satisfy related to the value
        enum:
        - match
        - not_match
  create_log_alert_response:
    type: object
    properties:
      alertId:
        type: string
        example: ccfa453e-c1ec-11eb-9e0b-06ac0788a752
        description: |
          The log alert identifier
      alertName:
        type: string
        example: ar1
        description: |
          The human-readable name for the alert
      labels:
        type: array
        items:
          $ref: '#/definitions/KVP'
      index:
        type: string
        example: fgt-82f4710-3d04-429a-8243-5a2ac741fd58
        description: |
          The Network Service ID.
      query:
        type: string
        example: '*testlogs*'
        description: |
          The query has regex format
      severity:
        type: string
        description: the severity of the alert
        enum:
        - warning
        - error
        - critical
      for:
        type: string
        example: 60s
        description: The time during which the system receives messages that match the query.  Pattern [0-9]+{s}
        pattern: \d+[s]
      target:
        type: string
        format: URI
        example: http://10.5.1.188:8085/sla_manager/notifications
        description: the URL to which the notification of the violated threshold should be sent
      kind:
        type: string
        description: the kind of inequality the query should satisfy related to the value
        enum:
        - match
        - not_match
  Topic:
    type: object
    properties:
      topic:
        type: string
        description: Name of the topic
  inline_response_200:
    type: object
    properties:
      deleted:
        type: array
        items:
          type: string
  inline_response_200_1:
    type: object
    properties:
      deleted:
        type: array
        description: deleted alerts
        items:
          type: string
  inline_response_200_2:
    type: object
    properties:
      deleted:
        type: array
        description: deleted dashboards
        items:
          type: string
  inline_response_200_3:
    type: object
    properties:
      deleted:
        type: array
        description: deleted agent identifiers
        items:
          type: string
  inline_response_200_4:
    type: object
    properties:
      deleted:
        type: array
        description: deleted prometheus collector identifiers
        items:
          type: string
  inline_response_200_5:
    type: object
    properties:
      deleted:
        type: array
        description: deleted prometheus expoter identifiers
        items:
          type: string
  inline_response_200_6:
    type: object
    properties:
      deleted:
        type: array
        description: deleted prometheus scraper identifiers
        items:
          type: string
  inline_response_200_7:
    type: object
    properties:
      deleted:
        type: array
        description: deleted Kibana dashboard identifiers
        items:
          type: string
  inline_response_200_8:
    type: object
    properties:
      deleted:
        type: array
        description: deleted log alert identifiers
        items:
          type: string
  add_prometheus_collector_labels:
    type: object
    properties:
      key:
        type: string
        example: instance
      value:
        type: string
        example: vm_agent_1:9100
